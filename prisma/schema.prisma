generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.VarChar(36)
  avatar    String?   @db.VarChar(255)
  isMod     Boolean   @default(false)
  username  String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  Club      Club[]
  Post      Post[]
  Comment   Comment[]
}

model Club {
  id        String    @id @default(uuid()) @db.VarChar(36)
  title     String    @db.VarChar(255)
  avatar    String?   @db.VarChar(255)
  user      User      @relation(fields: [creator], references: [id])
  creator   String    @unique @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  Post      Post[]
}

model Post {
  id        String    @id @default(uuid()) @db.VarChar(36)
  image     String?   @db.VarChar(255)
  user      User      @relation(fields: [creator], references: [id])
  creator   String    @db.VarChar(255)
  club      Club      @relation(fields: [clubId], references: [id])
  clubId    String    @db.VarChar(255)
  message   String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  Comment   Comment[]
}

model Comment {
  id        String    @id @default(uuid()) @db.VarChar(36)
  user      User      @relation(fields: [userId], references: [id])
  userId    String    @db.VarChar(255)
  message   String    @db.VarChar(255)
  post      Post      @relation(fields: [postId], references: [id])
  postId    String    @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
}
